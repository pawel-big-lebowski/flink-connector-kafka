Class <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator$PartitionChange> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Class <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator$PartitionOffsetsRetrieverImpl> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$ContextStateSerializer> extends class <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$ContextStateSerializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionContext> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$NextTransactionalIdHintSerializer> extends class <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$NextTransactionalIdHintSerializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$TransactionStateSerializer> extends class <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$TransactionStateSerializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElement> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleRecord> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Class <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleWatermark> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Class <org.apache.flink.streaming.connectors.kafka.shuffle.StreamKafkaShuffleSink> extends class <org.apache.flink.streaming.api.operators.StreamSink> in (StreamKafkaShuffleSink.java:0)
Constructor <org.apache.flink.connector.kafka.dynamic.source.enumerator.DynamicKafkaSourceEnumerator.<init>(org.apache.flink.connector.kafka.dynamic.source.enumerator.subscriber.KafkaStreamSubscriber, org.apache.flink.connector.kafka.dynamic.metadata.KafkaMetadataService, org.apache.flink.api.connector.source.SplitEnumeratorContext, org.apache.flink.connector.kafka.source.enumerator.initializer.OffsetsInitializer, org.apache.flink.connector.kafka.source.enumerator.initializer.OffsetsInitializer, java.util.Properties, org.apache.flink.api.connector.source.Boundedness, org.apache.flink.connector.kafka.dynamic.source.enumerator.DynamicKafkaSourceEnumState, org.apache.flink.connector.kafka.dynamic.source.enumerator.StoppableKafkaEnumContextProxy$StoppableKafkaEnumContextProxyFactory)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSourceEnumerator.java:0)
Constructor <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.<init>(org.apache.flink.api.connector.source.SourceReaderContext, org.apache.flink.connector.kafka.source.reader.deserializer.KafkaRecordDeserializationSchema, java.util.Properties)> calls constructor <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.<init>(int)> in (DynamicKafkaSourceReader.java:114)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$ContextStateSerializer.<init>()> calls constructor <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton.<init>()> in (FlinkKafkaProducer.java:1733)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionContext.<init>(java.util.Set)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState.<init>(java.lang.String, long, short, org.apache.flink.streaming.connectors.kafka.internals.FlinkKafkaInternalProducer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState.<init>(java.lang.String, org.apache.flink.streaming.connectors.kafka.internals.FlinkKafkaInternalProducer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState.<init>(org.apache.flink.streaming.connectors.kafka.internals.FlinkKafkaInternalProducer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducer.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$NextTransactionalIdHintSerializer.<init>()> calls constructor <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton.<init>()> in (FlinkKafkaProducer.java:1879)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$TransactionStateSerializer.<init>()> calls constructor <org.apache.flink.api.common.typeutils.base.TypeSerializerSingleton.<init>()> in (FlinkKafkaProducer.java:1630)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducerBase.<init>(java.lang.String, org.apache.flink.streaming.util.serialization.KeyedSerializationSchema, java.util.Properties, org.apache.flink.streaming.connectors.kafka.partitioner.FlinkKafkaPartitioner)> calls method <org.apache.flink.api.java.ClosureCleaner.clean(java.lang.Object, org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel, boolean)> in (FlinkKafkaProducerBase.java:144)
Constructor <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducerBase.<init>(java.lang.String, org.apache.flink.streaming.util.serialization.KeyedSerializationSchema, java.util.Properties, org.apache.flink.streaming.connectors.kafka.partitioner.FlinkKafkaPartitioner)> calls method <org.apache.flink.api.java.ClosureCleaner.ensureSerializable(java.lang.Object)> in (FlinkKafkaProducerBase.java:146)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.<init>(java.lang.Object, java.util.List, org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long)> has parameter of type <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer> in (AbstractFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.<init>(java.lang.Object, java.util.List, org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long)> has parameter of type <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService> in (AbstractFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher.<init>(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long, java.lang.ClassLoader, org.apache.flink.metrics.MetricGroup, boolean)> calls constructor <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer.<init>(org.apache.flink.api.common.eventtime.WatermarkOutput)> in (AbstractFetcher.java:154)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher.<init>(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long, java.lang.ClassLoader, org.apache.flink.metrics.MetricGroup, boolean)> has parameter of type <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService> in (AbstractFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.KafkaFetcher.<init>(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long, java.lang.ClassLoader, java.lang.String, org.apache.flink.streaming.connectors.kafka.KafkaDeserializationSchema, java.util.Properties, long, org.apache.flink.metrics.MetricGroup, org.apache.flink.metrics.MetricGroup, boolean)> has parameter of type <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService> in (KafkaFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.<init>(org.apache.flink.api.common.typeutils.TypeSerializer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher.<init>(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.runtime.tasks.ProcessingTimeService, long, java.lang.ClassLoader, java.lang.String, org.apache.flink.streaming.connectors.kafka.KafkaDeserializationSchema, java.util.Properties, long, org.apache.flink.metrics.MetricGroup, org.apache.flink.metrics.MetricGroup, boolean, org.apache.flink.api.common.typeutils.TypeSerializer, int)> has parameter of type <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService> in (KafkaShuffleFetcher.java:0)
Constructor <org.apache.flink.streaming.connectors.kafka.shuffle.StreamKafkaShuffleSink.<init>(org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer)> calls constructor <org.apache.flink.streaming.api.operators.StreamSink.<init>(org.apache.flink.streaming.api.functions.sink.SinkFunction)> in (StreamKafkaShuffleSink.java:35)
Constructor <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.<init>(java.lang.String, org.apache.flink.streaming.connectors.kafka.partitioner.FlinkKafkaPartitioner, org.apache.flink.api.common.serialization.SerializationSchema, org.apache.flink.api.common.serialization.SerializationSchema, [Lorg.apache.flink.table.data.RowData$FieldGetter;, [Lorg.apache.flink.table.data.RowData$FieldGetter;, boolean, [I, boolean)> has parameter of type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Field <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.metricGroups> has generic type <java.util.Map<java.lang.String, org.apache.flink.runtime.metrics.groups.AbstractMetricGroup>> with type argument depending on <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup> in (KafkaClusterMetricGroupManager.java:0)
Field <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.availabilityHelper> has type <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper> in (DynamicKafkaSourceReader.java:0)
Field <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.timerService> has type <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService> in (AbstractFetcher.java:0)
Field <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.watermarkOutputMultiplexer> has type <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer> in (AbstractFetcher.java:0)
Field <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher.watermarkOutputMultiplexer> has type <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer> in (AbstractFetcher.java:0)
Field <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.dis> has type <org.apache.flink.core.memory.DataInputDeserializer> in (KafkaShuffleFetcher.java:0)
Field <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.dos> has type <org.apache.flink.core.memory.DataOutputSerializer> in (FlinkKafkaShuffleProducer.java:0)
Field <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.keyFieldGetters> has type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Field <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.valueFieldGetters> has type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.DynamicKafkaSource.getKafkaStreamSubscriber()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSource.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.close()> calls method <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup.close()> in (KafkaClusterMetricGroupManager.java:73)
Method <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.close(java.lang.String)> calls method <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup.close()> in (KafkaClusterMetricGroupManager.java:62)
Method <org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroupManager.register(java.lang.String, org.apache.flink.connector.kafka.dynamic.source.metrics.KafkaClusterMetricGroup)> checks instanceof <org.apache.flink.runtime.metrics.groups.AbstractMetricGroup> in (KafkaClusterMetricGroupManager.java:42)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.completeAndResetAvailabilityHelper()> calls constructor <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.<init>(int)> in (DynamicKafkaSourceReader.java:475)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.completeAndResetAvailabilityHelper()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.getAvailableFuture()> in (DynamicKafkaSourceReader.java:474)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.completeAndResetAvailabilityHelper()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.getAvailableFuture()> in (DynamicKafkaSourceReader.java:485)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.getAvailabilityHelper()> has return type <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper> in (DynamicKafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.getAvailabilityHelper()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.isActivelyConsumingSplits()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (DynamicKafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.isAvailable()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.getAvailableFuture()> in (DynamicKafkaSourceReader.java:383)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.isAvailable()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.resetToUnAvailable()> in (DynamicKafkaSourceReader.java:381)
Method <org.apache.flink.connector.kafka.dynamic.source.reader.DynamicKafkaSourceReader.syncAvailabilityHelperWithReaders()> calls method <org.apache.flink.streaming.runtime.io.MultipleFuturesAvailabilityHelper.anyOf(int, java.util.concurrent.CompletableFuture)> in (DynamicKafkaSourceReader.java:496)
Method <org.apache.flink.connector.kafka.sink.KafkaSink.getKafkaProducerConfig()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSink.java:0)
Method <org.apache.flink.connector.kafka.sink.KafkaSinkBuilder.setRecordSerializer(org.apache.flink.connector.kafka.sink.KafkaRecordSerializationSchema)> calls method <org.apache.flink.api.java.ClosureCleaner.clean(java.lang.Object, org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel, boolean)> in (KafkaSinkBuilder.java:152)
Method <org.apache.flink.connector.kafka.sink.KafkaWriter.getCurrentProducer()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaWriter.java:0)
Method <org.apache.flink.connector.kafka.sink.KafkaWriter.getProducerPool()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaWriter.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.createReader(org.apache.flink.api.connector.source.SourceReaderContext, java.util.function.Consumer)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.getConfiguration()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.getKafkaSubscriber()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.KafkaSource.getStoppingOffsetsInitializer()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSource.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumStateSerializer.serializeTopicPartitions(java.util.Collection)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumStateSerializer.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator.deepCopyProperties(java.util.Properties, java.util.Properties)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator.getPartitionChange(java.util.Set)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Method <org.apache.flink.connector.kafka.source.enumerator.KafkaSourceEnumerator.getSplitOwner(org.apache.kafka.common.TopicPartition, int)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceEnumerator.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReader.consumer()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaPartitionSplitReader.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaPartitionSplitReader.setConsumerClientRack(java.util.Properties, java.lang.String)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaPartitionSplitReader.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaSourceReader.getNumAliveFetchers()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceReader.java:0)
Method <org.apache.flink.connector.kafka.source.reader.KafkaSourceReader.getOffsetsToCommit()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaSourceReader.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.api.common.eventtime.WatermarkStrategy)> calls method <org.apache.flink.api.java.ClosureCleaner.clean(java.lang.Object, org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel, boolean)> in (FlinkKafkaConsumerBase.java:304)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks)> calls constructor <org.apache.flink.streaming.runtime.operators.util.AssignerWithPeriodicWatermarksAdapter$Strategy.<init>(org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks)> in (FlinkKafkaConsumerBase.java:398)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks)> calls method <org.apache.flink.api.java.ClosureCleaner.clean(java.lang.Object, org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel, boolean)> in (FlinkKafkaConsumerBase.java:397)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks)> has generic parameter type <org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks<T>> with type argument depending on <org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks)> has parameter of type <org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks)> calls constructor <org.apache.flink.streaming.runtime.operators.util.AssignerWithPunctuatedWatermarksAdapter$Strategy.<init>(org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks)> in (FlinkKafkaConsumerBase.java:352)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks)> calls method <org.apache.flink.api.java.ClosureCleaner.clean(java.lang.Object, org.apache.flink.api.common.ExecutionConfig$ClosureCleanerLevel, boolean)> in (FlinkKafkaConsumerBase.java:351)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks)> has generic parameter type <org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks<T>> with type argument depending on <org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.assignTimestampsAndWatermarks(org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks)> has parameter of type <org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.createFetcher(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.api.operators.StreamingRuntimeContext, org.apache.flink.streaming.connectors.kafka.config.OffsetCommitMode, org.apache.flink.metrics.MetricGroup, boolean)> has parameter of type <org.apache.flink.streaming.api.operators.StreamingRuntimeContext> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.createStateSerializer(org.apache.flink.api.common.ExecutionConfig)> calls constructor <org.apache.flink.api.java.typeutils.runtime.TupleSerializer.<init>(java.lang.Class, [Lorg.apache.flink.api.common.typeutils.TypeSerializer;)> in (FlinkKafkaConsumerBase.java:1225)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.createStateSerializer(org.apache.flink.api.common.ExecutionConfig)> calls constructor <org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.<init>(java.lang.Class, org.apache.flink.api.common.ExecutionConfig)> in (FlinkKafkaConsumerBase.java:1217)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.createStateSerializer(org.apache.flink.api.common.ExecutionConfig)> gets field <org.apache.flink.api.common.typeutils.base.LongSerializer.INSTANCE> in (FlinkKafkaConsumerBase.java:1217)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.createStateSerializer(org.apache.flink.api.common.ExecutionConfig)> has return type <org.apache.flink.api.java.typeutils.runtime.TupleSerializer> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.createStateSerializer(org.apache.flink.api.common.ExecutionConfig)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.getEnableCommitOnCheckpoints()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.getOffsetCommitMode()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.getPendingOffsetsToCommit()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.getRestoredState()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.getSubscribedPartitionsToStartOffsets()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.joinDiscoveryLoopThread()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaConsumerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.open(org.apache.flink.configuration.Configuration)> calls method <org.apache.flink.api.common.serialization.RuntimeContextInitializationContextAdapters.deserializationAdapter(org.apache.flink.api.common.functions.RuntimeContext, java.util.function.Function)> in (FlinkKafkaConsumerBase.java:752)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumerBase.open(org.apache.flink.configuration.Configuration)> calls method <org.apache.flink.streaming.api.operators.StreamingRuntimeContext.isCheckpointingEnabled()> in (FlinkKafkaConsumerBase.java:566)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducerBase.getKafkaProducer(java.util.Properties)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducerBase.numPendingRecords()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaProducerBase.java:0)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducerBase.open(org.apache.flink.configuration.Configuration)> calls method <org.apache.flink.api.common.serialization.RuntimeContextInitializationContextAdapters.serializationAdapter(org.apache.flink.api.common.functions.RuntimeContext, java.util.function.Function)> in (FlinkKafkaProducerBase.java:223)
Method <org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducerBase.open(org.apache.flink.configuration.Configuration)> calls method <org.apache.flink.streaming.api.operators.StreamingRuntimeContext.isCheckpointingEnabled()> in (FlinkKafkaProducerBase.java:260)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.onProcessingTime(long)> calls method <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer.onPeriodicEmit()> in (AbstractFetcher.java:604)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.onProcessingTime(long)> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.getCurrentProcessingTime()> in (AbstractFetcher.java:608)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.onProcessingTime(long)> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.registerTimer(long, org.apache.flink.api.common.operators.ProcessingTimeService$ProcessingTimeCallback)> in (AbstractFetcher.java:608)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.start()> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.getCurrentProcessingTime()> in (AbstractFetcher.java:593)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher$PeriodicWatermarkEmitter.start()> calls method <org.apache.flink.streaming.runtime.tasks.ProcessingTimeService.registerTimer(long, org.apache.flink.api.common.operators.ProcessingTimeService$ProcessingTimeCallback)> in (AbstractFetcher.java:593)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher.createPartitionStateHolders(java.util.Map, int, org.apache.flink.util.SerializedValue, java.lang.ClassLoader)> calls method <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer.getDeferredOutput(java.lang.String)> in (AbstractFetcher.java:430)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher.createPartitionStateHolders(java.util.Map, int, org.apache.flink.util.SerializedValue, java.lang.ClassLoader)> calls method <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer.getImmediateOutput(java.lang.String)> in (AbstractFetcher.java:428)
Method <org.apache.flink.streaming.connectors.kafka.internals.AbstractFetcher.createPartitionStateHolders(java.util.Map, int, org.apache.flink.util.SerializedValue, java.lang.ClassLoader)> calls method <org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer.registerNewOutput(java.lang.String, org.apache.flink.api.common.eventtime.WatermarkOutputMultiplexer$WatermarkUpdateListener)> in (AbstractFetcher.java:426)
Method <org.apache.flink.streaming.connectors.kafka.internals.FlinkKafkaInternalProducer.getTransactionCoordinatorId()> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (FlinkKafkaInternalProducer.java:0)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaConsumerThread.getConsumer(java.util.Properties)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaConsumerThread.java:0)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaConsumerThread.reassignPartitions(java.util.List)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaConsumerThread.java:0)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls constructor <org.apache.flink.core.memory.DataInputDeserializer.<init>([B)> in (KafkaShuffleFetcher.java:240)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.ByteSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:244)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.ByteSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:245)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.IntSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:254)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.LongSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:251)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.api.common.typeutils.base.LongSerializer.deserialize(org.apache.flink.core.memory.DataInputView)> in (KafkaShuffleFetcher.java:255)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> calls method <org.apache.flink.core.memory.DataInputDeserializer.setBuffer([B)> in (KafkaShuffleFetcher.java:238)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.ByteSerializer.INSTANCE> in (KafkaShuffleFetcher.java:244)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.ByteSerializer.INSTANCE> in (KafkaShuffleFetcher.java:245)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.IntSerializer.INSTANCE> in (KafkaShuffleFetcher.java:253)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.LongSerializer.INSTANCE> in (KafkaShuffleFetcher.java:250)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> gets field <org.apache.flink.api.common.typeutils.base.LongSerializer.INSTANCE> in (KafkaShuffleFetcher.java:254)
Method <org.apache.flink.streaming.connectors.kafka.internals.KafkaShuffleFetcher$KafkaShuffleElementDeserializer.deserialize(org.apache.kafka.clients.consumer.ConsumerRecord)> is annotated with <org.apache.flink.annotation.VisibleForTesting> in (KafkaShuffleFetcher.java:0)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffle.addKafkaShuffle(org.apache.flink.streaming.api.datastream.DataStream, org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer, int)> calls constructor <org.apache.flink.streaming.api.transformations.LegacySinkTransformation.<init>(org.apache.flink.api.dag.Transformation, java.lang.String, org.apache.flink.streaming.api.operators.StreamSink, int, boolean)> in (FlinkKafkaShuffle.java:380)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffle.addKafkaShuffle(org.apache.flink.streaming.api.datastream.DataStream, org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer, int)> calls method <org.apache.flink.api.dag.Transformation.getOutputType()> in (FlinkKafkaShuffle.java:371)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffle.addKafkaShuffle(org.apache.flink.streaming.api.datastream.DataStream, org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer, int)> calls method <org.apache.flink.streaming.api.transformations.LegacySinkTransformation.setParallelism(int)> in (FlinkKafkaShuffle.java:383)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffle.keySelector(org.apache.flink.streaming.api.datastream.DataStream, [I)> calls constructor <org.apache.flink.api.common.operators.Keys$ExpressionKeys.<init>([I, org.apache.flink.api.common.typeinfo.TypeInformation)> in (FlinkKafkaShuffle.java:394)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffle.keySelector(org.apache.flink.streaming.api.datastream.DataStream, [I)> calls method <org.apache.flink.streaming.util.keys.KeySelectorUtil.getSelectorForArray([I, org.apache.flink.api.common.typeinfo.TypeInformation)> in (FlinkKafkaShuffle.java:392)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffle.keySelector(org.apache.flink.streaming.api.datastream.DataStream, [I)> calls method <org.apache.flink.streaming.util.keys.KeySelectorUtil.getSelectorForKeys(org.apache.flink.api.common.operators.Keys, org.apache.flink.api.common.typeinfo.TypeInformation, org.apache.flink.api.common.ExecutionConfig)> in (FlinkKafkaShuffle.java:396)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffle.readKeyBy(java.lang.String, org.apache.flink.streaming.api.environment.StreamExecutionEnvironment, org.apache.flink.api.common.typeinfo.TypeInformation, java.util.Properties, org.apache.flink.api.java.functions.KeySelector)> calls method <org.apache.flink.streaming.api.datastream.DataStreamUtils.reinterpretAsKeyedStream(org.apache.flink.streaming.api.datastream.DataStream, org.apache.flink.api.java.functions.KeySelector)> in (FlinkKafkaShuffle.java:352)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleConsumer.createFetcher(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.api.operators.StreamingRuntimeContext, org.apache.flink.streaming.connectors.kafka.config.OffsetCommitMode, org.apache.flink.metrics.MetricGroup, boolean)> calls method <org.apache.flink.streaming.api.operators.StreamingRuntimeContext.getExecutionConfig()> in (FlinkKafkaShuffleConsumer.java:81)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleConsumer.createFetcher(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.api.operators.StreamingRuntimeContext, org.apache.flink.streaming.connectors.kafka.config.OffsetCommitMode, org.apache.flink.metrics.MetricGroup, boolean)> calls method <org.apache.flink.streaming.api.operators.StreamingRuntimeContext.getMetricGroup()> in (FlinkKafkaShuffleConsumer.java:87)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleConsumer.createFetcher(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.api.operators.StreamingRuntimeContext, org.apache.flink.streaming.connectors.kafka.config.OffsetCommitMode, org.apache.flink.metrics.MetricGroup, boolean)> calls method <org.apache.flink.streaming.api.operators.StreamingRuntimeContext.getProcessingTimeService()> in (FlinkKafkaShuffleConsumer.java:80)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleConsumer.createFetcher(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.api.operators.StreamingRuntimeContext, org.apache.flink.streaming.connectors.kafka.config.OffsetCommitMode, org.apache.flink.metrics.MetricGroup, boolean)> calls method <org.apache.flink.streaming.api.operators.StreamingRuntimeContext.getTaskNameWithSubtasks()> in (FlinkKafkaShuffleConsumer.java:83)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleConsumer.createFetcher(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.api.operators.StreamingRuntimeContext, org.apache.flink.streaming.connectors.kafka.config.OffsetCommitMode, org.apache.flink.metrics.MetricGroup, boolean)> calls method <org.apache.flink.streaming.api.operators.StreamingRuntimeContext.getUserCodeClassLoader()> in (FlinkKafkaShuffleConsumer.java:82)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleConsumer.createFetcher(org.apache.flink.streaming.api.functions.source.SourceFunction$SourceContext, java.util.Map, org.apache.flink.util.SerializedValue, org.apache.flink.streaming.api.operators.StreamingRuntimeContext, org.apache.flink.streaming.connectors.kafka.config.OffsetCommitMode, org.apache.flink.metrics.MetricGroup, boolean)> has parameter of type <org.apache.flink.streaming.api.operators.StreamingRuntimeContext> in (FlinkKafkaShuffleConsumer.java:0)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls constructor <org.apache.flink.core.memory.DataOutputSerializer.<init>(int)> in (FlinkKafkaShuffleProducer.java:186)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.clear()> in (FlinkKafkaShuffleProducer.java:205)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.getCopyOfBuffer()> in (FlinkKafkaShuffleProducer.java:204)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:190)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:193)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:195)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeRecord(java.lang.Object, java.lang.Long)> calls method <org.apache.flink.core.memory.DataOutputSerializer.writeLong(long)> in (FlinkKafkaShuffleProducer.java:196)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls constructor <org.apache.flink.core.memory.DataOutputSerializer.<init>(int)> in (FlinkKafkaShuffleProducer.java:212)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.clear()> in (FlinkKafkaShuffleProducer.java:225)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.getCopyOfBuffer()> in (FlinkKafkaShuffleProducer.java:224)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:216)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.write(int)> in (FlinkKafkaShuffleProducer.java:217)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.writeInt(int)> in (FlinkKafkaShuffleProducer.java:218)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer$KafkaSerializer.serializeWatermark(org.apache.flink.streaming.api.watermark.Watermark, int)> calls method <org.apache.flink.core.memory.DataOutputSerializer.writeLong(long)> in (FlinkKafkaShuffleProducer.java:219)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.FlinkKafkaShuffleProducer.invoke(org.apache.flink.streaming.connectors.kafka.FlinkKafkaProducer$KafkaTransactionState, java.lang.Object, org.apache.flink.streaming.api.functions.sink.SinkFunction$Context)> calls method <org.apache.flink.runtime.state.KeyGroupRangeAssignment.assignKeyToParallelOperator(java.lang.Object, int, int)> in (FlinkKafkaShuffleProducer.java:99)
Method <org.apache.flink.streaming.connectors.kafka.shuffle.StreamKafkaShuffleSink.processWatermark(org.apache.flink.streaming.api.watermark.Watermark)> calls method <org.apache.flink.streaming.api.operators.StreamSink.processWatermark(org.apache.flink.streaming.api.watermark.Watermark)> in (StreamKafkaShuffleSink.java:40)
Method <org.apache.flink.streaming.connectors.kafka.table.DynamicKafkaRecordSerializationSchema.createProjectedRow(org.apache.flink.table.data.RowData, org.apache.flink.types.RowKind, [Lorg.apache.flink.table.data.RowData$FieldGetter;)> has parameter of type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (DynamicKafkaRecordSerializationSchema.java:0)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaConnectorOptionsUtil.createKeyFormatProjection(org.apache.flink.configuration.ReadableConfig, org.apache.flink.table.types.DataType)> calls method <org.apache.flink.table.types.logical.utils.LogicalTypeChecks.getFieldNames(org.apache.flink.table.types.logical.LogicalType)> in (KafkaConnectorOptionsUtil.java:543)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaConnectorOptionsUtil.createValueFormatProjection(org.apache.flink.configuration.ReadableConfig, org.apache.flink.table.types.DataType)> calls method <org.apache.flink.table.types.logical.utils.LogicalTypeChecks.getFieldCount(org.apache.flink.table.types.logical.LogicalType)> in (KafkaConnectorOptionsUtil.java:587)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaDynamicSink.createSerialization(org.apache.flink.table.connector.sink.DynamicTableSink$Context, org.apache.flink.table.connector.format.EncodingFormat, [I, java.lang.String)> calls method <org.apache.flink.table.types.utils.DataTypeUtils.stripRowPrefix(org.apache.flink.table.types.DataType, java.lang.String)> in (KafkaDynamicSink.java:386)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaDynamicSink.getFieldGetters(java.util.List, [I)> has return type <[Lorg.apache.flink.table.data.RowData$FieldGetter;> in (KafkaDynamicSink.java:0)
Method <org.apache.flink.streaming.connectors.kafka.table.KafkaDynamicSource.createDeserialization(org.apache.flink.table.connector.source.DynamicTableSource$Context, org.apache.flink.table.connector.format.DecodingFormat, [I, java.lang.String)> calls method <org.apache.flink.table.types.utils.DataTypeUtils.stripRowPrefix(org.apache.flink.table.types.DataType, java.lang.String)> in (KafkaDynamicSource.java:566)
